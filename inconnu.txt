import math
import string
import sys
import os
import tokenize
from sys import argv
from sklearn.feature_extraction.text import TfidfVectorizer
from nltk.corpus import stopwords
os.chdir('/Users/philb/OneDrive/Projet Final/Repository/Elections/')
from spacy.lang.fr.stop_words import STOP_WORDS as fr_stop

n = len(sys.argv)
with open('0.txt', 'r', encoding="utf8") as f:
    texte1 = f.read().replace('\n', '')
with open('1.txt', 'r', encoding="utf8") as f:
    texte2 = f.read().replace('\n', '')
with open('2.txt', 'r', encoding="utf8") as f:
    texte3 = f.read().replace('\n', '')
with open('3.txt', 'r', encoding="utf8") as f:
    texte4 = f.read().replace('\n', '')
with open('4.txt', 'r', encoding="utf8") as f:
    texte5 = f.read().replace('\n', '')

corpus = [texte1, texte2, texte3, texte4, texte5]


vectorizer = TfidfVectorizer(stop_words=fr_stop)
vecs = vectorizer.fit_transform(corpus)
feature_names = vectorizer.get_feature_names_out()
dense = vecs.todense()
lst1 = dense.tolist()
df = pd.DataFrame(lst1, columns=feature_names)
df.T.sum(axis=1)
Cloud = WordCloud(background_color="white", max_words=30).generate_from_frequencies(df.T.sum(axis=1))

WordCloud(background_color="white", max_words=30).generate_from_frequencies(test.T.sum(axis=1))